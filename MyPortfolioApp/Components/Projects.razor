@inject IJSRuntime JSRuntime

<section id="projects">
    <div class="section-padding">
        <div class="container">
            <div class="position-relative d-flex align-items-center justify-content-center">
                <h1 class="display-1 text-uppercase text-white" style="-webkit-text-stroke: 1px #dee2e6;">Gallery</h1>
                <h1 class="position-absolute text-uppercase text-primary">My Projects</h1>
            </div>
            <br />
            <div>
                <div>
                    @if (projects.Any())
                    {
                        <div class="owl-carousel project-carousel">

                            @foreach (var project in projects)
                            {
                                <div class="single-project-item">
                                    <img src=@project.WebsiteImage alt="image loading..." />
                                    <br>
                                    <p>
                                        @project.Description
                                    </p>
                                    <br>
                                    <h3>@project.Title <span>Techonlogies used :</span></h3>
                                    <div class="tech-stack">
                                        @foreach (var skill in project.SkillImages)
                                        {
                                            <img src=@skill />
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <h3> <span>There is no projects right now...</span></h3>
                    }

                </div>
            </div>
        </div>
    </div>

</section>

@code {
    [Parameter, EditorRequired]
    public required ProjectService ProjectService { get; set; }

    private List<Project> projects = new List<Project>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            projects = await ProjectService.GetProjectsAsync();
            StateHasChanged();
            int numberOfProjects = projects.Count;
            await JSRuntime.InvokeVoidAsync("initializeOwlCarousel", numberOfProjects);
        }
    }
}
